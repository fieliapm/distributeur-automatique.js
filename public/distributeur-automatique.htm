<!DOCTYPE html>

<!--
distributeur-automatique.js - evaluate max purchase strategy
Copyright (C) 2021-present Himawari Tachibana <fieliapm@gmail.com>

This file is part of date-boundary.js

distributeur-automatique.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<html>

<head>
    <title>Distributeur Automatique</title>
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script type="text/javascript" src="cookie.js"></script>
    <script type="text/javascript" src="io-util.js"></script>
    <script type="text/javascript" src="distributeur-automatique.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            function restoreInput() {
                var data = loadStorage();
                if (data === null) {
                    data = { prices: [24, 29, 37, 33, 22, 109, 38, 32, 57, 30, 132, 19, 14, 27, 28], budget: 250 };
                }

                var find_max_purchase = $("#find_max_purchase");
                find_max_purchase.find("input:text[name='prices']").val(formatNumberArray(data.prices));
                find_max_purchase.find("input:text[name='budget']").val(data.budget);
            }

            function formatSolution(result) {
                var maxPurchase = result.maxPurchase;
                var unusedPrices = result.unusedPrices;
                var solutions = result.solutions;
                var solutionCount = solutions.length;
                var resultHTML = "";
                resultHTML += "<div>maximal purchase price: " + maxPurchase.toString() + "</div>";
                resultHTML += "<div>unused prices: " + JSON.stringify(unusedPrices) + "</div>";
                resultHTML += "<div>solution count: " + solutionCount.toString() + "</div>";
                resultHTML += "<div>solutions:</div>";
                for (var i in solutions) {
                    var solutionStr = JSON.stringify(solutions[i]);
                    resultHTML += "<div>" + solutionStr + "</div>";
                }
                return resultHTML;
            }

            $("#find_max_purchase").submit(function (e) {
                e.preventDefault();

                var find_max_purchase = $("#find_max_purchase");
                var pricesStr = find_max_purchase.find("input:text[name='prices']").val();
                var budgetStr = find_max_purchase.find("input:text[name='budget']").val();
                //var action_url = "/api/find_max_purchase";

                var prices = parseNumberArray(pricesStr);
                var budget = parseInt(budgetStr);

                saveStorage(prices, budget);

                var result = evaluateMaxPurchase(prices, budget);
                $("#solution").html(formatSolution(result));

                /*
                var inputData = { prices: prices, budget: budget };
                $.ajax({
                    type: "POST",
                    url: action_url,
                    data: JSON.stringify(inputData),
                    success: function (data, textStatus, jqXHR) {
                        $("#solution").html(formatSolution(data));
                    },
                    dataType: "json"
                });
                */

                //$("#find_max_purchase").attr("action", action_url);
            });

            $("#find_max_purchase").find("input:button[name='reset']").click(function (e) {
                clearStorage();
                restoreInput();
            });

            restoreInput();
        });
    </script>
</head>

<body>
    <h1>Distributeur Automatique</h1>

    <h2>please input prices and your budget</h2>
    <form id="find_max_purchase" method="post">
        <table>
            <tr>
                <td>prices:</td>
                <td><input type="text" name="prices" size=90></td>
            </tr>
            <tr>
                <td>budget:</td>
                <td><input type="text" name="budget" size=90></td>
            </tr>
        </table>
        <input type="submit">
        <input type="button" name="reset" value="reset">
    </form>
    <div id="solution"></div>
</body>

</html>
